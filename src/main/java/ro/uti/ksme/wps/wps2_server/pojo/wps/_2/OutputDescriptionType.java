//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.08 at 01:22:16 PM EEST 
//


package ro.uti.ksme.wps.wps2_server.pojo.wps._2;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * Description of a process Output.
 * <p>
 * <p>
 * In this use, the DescriptionType shall describe a process output.
 *
 *
 * <p>Java class for OutputDescriptionType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="OutputDescriptionType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.opengis.net/wps/2.0}DescriptionType"&gt;
 *       &lt;choice&gt;
 *         &lt;element ref="{http://www.opengis.net/wps/2.0}DataDescription"/&gt;
 *         &lt;element name="Output" type="{http://www.opengis.net/wps/2.0}OutputDescriptionType" maxOccurs="unbounded"/&gt;
 *       &lt;/choice&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OutputDescriptionType", propOrder = {
        "dataDescription",
        "output"
})
public class OutputDescriptionType
        extends DescriptionType {

    @XmlElementRef(name = "DataDescription", namespace = "http://www.opengis.net/wps/2.0", type = JAXBElement.class, required = false)
    protected JAXBElement<? extends DataDescriptionType> dataDescription;
    @XmlElement(name = "Output")
    protected List<OutputDescriptionType> output;

    /**
     * Gets the value of the dataDescription property.
     *
     * @return possible object is
     * {@link JAXBElement }{@code <}{@link ComplexDataType }{@code >}
     * {@link JAXBElement }{@code <}{@link LiteralDataType }{@code >}
     * {@link JAXBElement }{@code <}{@link BoundingBoxData }{@code >}
     * {@link JAXBElement }{@code <}{@link DataDescriptionType }{@code >}
     */
    public JAXBElement<? extends DataDescriptionType> getDataDescription() {
        return dataDescription;
    }

    /**
     * Sets the value of the dataDescription property.
     *
     * @param value allowed object is
     *              {@link JAXBElement }{@code <}{@link ComplexDataType }{@code >}
     *              {@link JAXBElement }{@code <}{@link LiteralDataType }{@code >}
     *              {@link JAXBElement }{@code <}{@link BoundingBoxData }{@code >}
     *              {@link JAXBElement }{@code <}{@link DataDescriptionType }{@code >}
     */
    public void setDataDescription(JAXBElement<? extends DataDescriptionType> value) {
        this.dataDescription = value;
    }

    public boolean isSetDataDescription() {
        return (this.dataDescription != null);
    }

    /**
     * Gets the value of the output property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the output property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOutput().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OutputDescriptionType }
     */
    public List<OutputDescriptionType> getOutput() {
        if (output == null) {
            output = new ArrayList<OutputDescriptionType>();
        }
        return this.output;
    }

    public boolean isSetOutput() {
        return ((this.output != null) && (!this.output.isEmpty()));
    }

    public void unsetOutput() {
        this.output = null;
    }

}
